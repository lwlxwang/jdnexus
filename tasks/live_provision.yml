---
- block:
    - name: "Prompt for Nexus device username if not supplied"
      pause:
        prompt: "Enter Nexus device username"
      register: "username_prompt"

    - name: "Store ansible_user"
      set_fact:
        ansible_user: "{{ username_prompt.user_input }}"

  when: "ansible_user is not defined or ansible_user == 'centos'"
  run_once: true
  delegate_to: "localhost"

- block:
    - name: "Prompt for Nexus device password if not supplied"
      pause:
        prompt: "Enter Nexus device password"
      register: "password_prompt"

    - name: "Store ansible_password"
      set_fact:
        ansible_password: "{{ password_prompt.user_input }}"

  when: "ansible_password is not defined"
  run_once: true
  delegate_to: "localhost"

- name: "Add MOTD banner on Nexus {{ device_type }} from motd_banner.txt"
  nxos_banner:
    banner: "motd"
    text: "{{ motd_banner }}"

- name: "Push configuration to Nexus {{ device_type }}"
  nxos_config:
    src: "{{ playbook_dir }}/templates/nexus{{ device_types }}.j2"
    save_when: "changed"
  register: "config_result"

- block:
    - name: "Create mods/ directory"
      file:
        path: "mods"
        state: "directory"
      run_once: true

    - name: "Record last-known modifications if any exist"
      copy:
        content: "{{ config_result.updates | join('\n') }}"
        dest: "{{ playbook_dir }}/mods/{{ inventory_hostname }}_mods.txt"

  when: "config_result.updates is defined and config_result.updates"
  delegate_to: "localhost"
...
